import { View, Text, TouchableOpacity, Alert } from 'react-native'
import React, { useCallback, useState } from 'react'
import AsyncStorage from '@react-native-async-storage/async-storage'
import { router } from 'expo-router'

export default function Profile() {
  const [loggingOut, setLoggingOut] = useState(false)

  const handleLogout = useCallback(async () => {
    if (loggingOut) return
    try {
      setLoggingOut(true)
      // Clear only auth-related keys to avoid wiping unrelated storage
      await AsyncStorage.removeItem('user')
      // Optionally clear other session keys here if you use them
      // await AsyncStorage.multiRemove(['token', 'refreshToken'])

      // Navigate to onboarding (index.tsx will redirect unauthenticated users there)
      router.replace('/(routes)/onboarding')
    } catch (e) {
      console.error('Logout failed:', e)
      Alert.alert('Logout Error', 'An error occurred while logging out. Please try again.')
    } finally {
      setLoggingOut(false)
    }
  }, [loggingOut])

  return (
    <View style={{ flex: 1, alignItems: 'center', justifyContent: 'center', padding: 20 }}>
      <Text style={{ fontSize: 20, marginBottom: 16 }}>Profile</Text>

      <TouchableOpacity
        onPress={handleLogout}
        activeOpacity={0.8}
        style={{
          backgroundColor: '#E53935',
          paddingVertical: 12,
          paddingHorizontal: 20,
          borderRadius: 8,
        }}
      >
        <Text style={{ color: 'white', fontSize: 16 }}>
          {loggingOut ? 'Logging out...' : 'Logout'}
        </Text>
      </TouchableOpacity>
    </View>
  )
}