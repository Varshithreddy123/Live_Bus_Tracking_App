generator client {
  provider = "prisma-client-js"
   output   = "../generated/prisma"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model user {
  id          String   @id @default(auto()) @map("_id") @db.ObjectId
  name        String?
  phoneNumber String?  @unique
  email       String?  @unique
  totalRides  Float @default(0)
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  rides Rides[] @relation("UserRides")

}
enum VehicleType {
  Electric
  Petrol
  Diesel
  Hybrid
}

model driver {
  id String   @id @default(auto()) @map("_id") @db.ObjectId
  name        String?
  country     String?
  phoneNumber String?  @unique
  email       String?  @unique
  vehicleType VehicleType
  vehicleNumber String? @unique
  vehicleImage String?
  vehicleColor String?
  drinving_license String? @unique
  rating Float
  totalEarning  Float @default(0)
  totalRides Float @default(0)
  pendingRides Float @default(0)
  cancleRides Float @default(0)
  status String @default("inactive")
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  rides Rides[] @relation("DriverRides")
}

model RouteStop {
  id          String   @id @default(auto()) @map("_id") @db.ObjectId
  routeId     String   @db.ObjectId
  busStandId  String   @db.ObjectId
  order       Int
  eta         String?
  route       Route    @relation("RouteStops", fields: [routeId], references: [id])
  busStand    BusStand @relation("RouteStops", fields: [busStandId], references: [id])
  createdAt   DateTime @default(now())

  @@unique([routeId, busStandId])
}

model BusStand {
  id          String   @id @default(auto()) @map("_id") @db.ObjectId
  name        String
  latitude    Float
  longitude   Float
  address     String?
  routes      RouteStop[] @relation("RouteStops")
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

model Route {
  id          String   @id @default(auto()) @map("_id") @db.ObjectId
  name        String
  busNumber   String
  stops       RouteStop[] @relation("RouteStops")
  polyline    String? // JSON string of coordinates
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

model Rides {
  id          String    @id @default(auto()) @map("_id") @db.ObjectId
  userId      String    @db.ObjectId
  busId       String    @db.ObjectId
  startPoint  String
  endPoint    String
  departure   DateTime
  arrival     DateTime
  charge      Float
  user        user      @relation("UserRides",fields: [userId], references: [id])
  driver      driver    @relation("DriverRides",fields: [busId], references: [id])
  createdAt   DateTime  @default(now())
}

